// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using veiculos.Contexts;

#nullable disable

namespace veiculos.Migrations
{
    [DbContext(typeof(Veiculos_Context))]
    [Migration("20231019035932_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("veiculos.Domains.Fabricante", b =>
                {
                    b.Property<Guid>("IdFabricante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdFabricante");

                    b.ToTable("Fabricante");
                });

            modelBuilder.Entity("veiculos.Domains.Veiculo", b =>
                {
                    b.Property<Guid>("IdVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdFabricante")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<double>("Preco")
                        .HasColumnType("FLOAT");

                    b.HasKey("IdVeiculo");

                    b.HasIndex("IdFabricante");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("veiculos.Domains.Veiculo", b =>
                {
                    b.HasOne("veiculos.Domains.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("IdFabricante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });
#pragma warning restore 612, 618
        }
    }
}
